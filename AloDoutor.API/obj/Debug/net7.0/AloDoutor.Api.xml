<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AloDoutor.Api</name>
    </assembly>
    <members>
        <member name="M:AloDoutor.Api.Controllers.AgendamentoController.ObterTodos">
            <summary>
            Obtém todos os agendamentos cadastrados.
            </summary>
            <returns>Uma lista de agendamentos.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.AgendamentoController.ObterPorId(System.Guid)">
            <summary>
            Obtém um agendamento por ID.
            </summary>
            <param name="id">O ID do agendamento a ser obtido.</param>
            <returns>O agendamento encontrado ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.AgendamentoController.ObterAgendamentoPorStatus(System.Int32)">
            <summary>
            Obtém agendamentos por status.
            </summary>
            <param name="status">O status dos agendamentos a serem obtidos.</param>
            <returns>Uma lista de agendamentos com o status especificado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.AgendamentoController.Adicionar(AloDoutor.Api.Application.DTO.AgendamentoDTO)">
            <summary>
            Adiciona um novo agendamento.
            </summary>
            <param name="agendamentoDTO">Os dados do agendamento a ser adicionado.</param>
            <returns>O agendamento adicionado ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.AgendamentoController.Cancelar(System.Guid,System.DateTime)">
            <summary>
            Realiza um reagendamento.
            </summary>
            <param name="id">O ID do agendamento a ser reagendado.</param>
            <param name="data">A nova data de agendamento.</param>
            <returns>Um código 201 em caso de sucesso no reagendamento ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.AgendamentoController.Cancelar(System.Guid)">
            <summary>
            Cancela um agendamento por ID.
            </summary>
            <param name="id">O ID do agendamento a ser cancelado.</param>
            <returns>Um código 201 em caso de sucesso no cancelamento ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeController.ObterTodos">
            <summary>
            Obtém todas as especialidades cadastradas.
            </summary>
            <returns>Uma lista de especialidades.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeController.ObterPorId(System.Guid)">
            <summary>
            Obtém uma especialidade por ID.
            </summary>
            <param name="id">O ID da especialidade a ser obtida.</param>
            <returns>A especialidade encontrada ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeController.ObterMedicoEspecialidadePorIdMedico(System.Guid)">
            <summary>
            Obtém médicos com uma especialidade por ID de especialidade.
            </summary>
            <param name="idEspecialidade">O ID da especialidade para obter os médicos.</param>
            <returns>A especialidade com os médicos associados ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeController.Adicionar(AloDoutor.Api.Application.DTO.EspecialidadeDTO)">
            <summary>
            Adiciona uma nova especialidade.
            </summary>
            <param name="especialidadeDTO">Os dados da especialidade a ser adicionada.</param>
            <returns>A especialidade adicionada ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeController.Atualizar(AloDoutor.Api.Application.DTO.EspecialidadeDTO)">
            <summary>
            Atualiza uma especialidade existente.
            </summary>
            <param name="especialidadeDTO">Os novos dados da especialidade a ser atualizada.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeController.Remover(System.Guid)">
            <summary>
            Remove uma especialidade por ID.
            </summary>
            <param name="id">O ID da especialidade a ser removida.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeMedicoController.ObterTodos">
            <summary>
            Obtém todas as especialidades de médico cadastradas.
            </summary>
            <returns>Uma lista de especialidades de médico.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeMedicoController.ObterPorId(System.Guid)">
            <summary>
            Obtém uma especialidade de médico por ID.
            </summary>
            <param name="id">O ID da especialidade de médico a ser obtida.</param>
            <returns>A especialidade de médico encontrada ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeMedicoController.Adicionar(AloDoutor.Api.Application.DTO.EspecialidadeMedicoDTO)">
            <summary>
            Adiciona uma nova especialidade de médico.
            </summary>
            <param name="especialidadeDTO">Os dados da especialidade de médico a ser adicionada.</param>
            <returns>A especialidade de médico adicionada ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeMedicoController.Atualizar(AloDoutor.Api.Application.DTO.EspecialidadeMedicoDTO)">
            <summary>
            Atualiza uma especialidade de médico existente.
            </summary>
            <param name="especialidadeDTO">Os novos dados da especialidade de médico a ser atualizada.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.EspecialidadeMedicoController.Remover(System.Guid)">
            <summary>
            Remove uma especialidade de médico por ID.
            </summary>
            <param name="id">O ID da especialidade de médico a ser removida.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.ObterTodos">
            <summary>
            Obtém todos os médicos cadastrados.
            </summary>
            <returns>Uma lista de médicos.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.ObterPorId(System.Guid)">
            <summary>
            Obtém um médico por ID.
            </summary>
            <param name="id">O ID do médico a ser obtido.</param>
            <returns>O médico encontrado ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.ObterMedicoEspecialidadePorIdMedico(System.Guid)">
            <summary>
            Obtém as especialidades de um médico por ID do médico.
            </summary>
            <param name="idMedico">O ID do médico para obter as especialidades.</param>
            <returns>O médico com suas especialidades ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.ObterAgendamentoPorMedico(System.Guid)">
            <summary>
            Obtém os agendamentos de um médico por ID do médico.
            </summary>
            <param name="idMedico">O ID do médico para obter os agendamentos.</param>
            <returns>O médico com seus agendamentos ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.Adicionar(AloDoutor.Api.Application.DTO.MedicoDTO)">
            <summary>
            Adiciona um novo médico.
            </summary>
            <param name="medicoDTO">Os dados do médico a ser adicionado.</param>
            <returns>O médico adicionado ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.Atualizar(AloDoutor.Api.Application.DTO.MedicoDTO)">
            <summary>
            Atualiza um médico existente.
            </summary>
            <param name="medicoDTO">Os novos dados do médico a ser atualizado.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.MedicoController.Remover(System.Guid)">
            <summary>
            Remove um médico por ID.
            </summary>
            <param name="id">O ID do médico a ser removido.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.PacienteController.ObterTodos">
            <summary>
            Obtém todos os pacientes cadastrados.
            </summary>
            <returns>Uma lista de pacientes.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.PacienteController.ObterPorId(System.Guid)">
            <summary>
            Obtém um paciente por ID.
            </summary>
            <param name="id">O ID do paciente a ser obtido.</param>
            <returns>O paciente encontrado ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.PacienteController.ObterAgendamentoPorPaciente(System.Guid)">
            <summary>
            Obtém os agendamentos de um paciente por ID do paciente.
            </summary>
            <param name="idPaciente">O ID do paciente para obter os agendamentos.</param>
            <returns>O paciente com seus agendamentos ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.PacienteController.Adicionar(AloDoutor.Api.Application.DTO.PacienteDTO)">
            <summary>
            Adiciona um novo paciente.
            </summary>
            <param name="pacienteDTO">Os dados do paciente a ser adicionado.</param>
            <returns>O paciente adicionado ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.PacienteController.Atualizar(AloDoutor.Api.Application.DTO.PacienteDTO)">
            <summary>
            Atualiza um paciente existente.
            </summary>
            <param name="pacienteDTO">Os novos dados do paciente a ser atualizado.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:AloDoutor.Api.Controllers.PacienteController.Remover(System.Guid)">
            <summary>
            Remove um paciente por ID.
            </summary>
            <param name="id">O ID do paciente a ser removido.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrado.</returns>
        </member>
    </members>
</doc>
